.*/*******************************************************************/
.*/*                                                                 */
.*/* NAME:                                                           */
.*/*  ZGETMEM                                                        */
.*/*                                                                 */
.*/* FUNCTION:                                                       */
.*/*  Obtain storage outside the primary address space.              */
.*/*                                                                 */
.*/* DESCRIPTION:                                                    */
.*/*  Add the address space represented by the target STOKEN to      */
.*/*  the DU-AL as a public entry and obtain private storage in      */
.*/*  the target address space.                                      */
.*/*                                                                 */
.*/* ENVIRONMENT:                                                    */
.*/*  TCB or SRB mode.                                               */
.*/*  Enabled for I/O and External interrupts.                       */
.*/*  The caller must not be locked.                                 */
.*/*                                                                 */
.*/* SECURITY:                                                       */
.*/*  When SAF=NOCALL is specified, security checks are bypassed.    */
.*/*  When SAF=XPCCLASS is specified, the caller must have READ      */
.*/*  authority to profile ZXPC.API.AUTH in resource class XPCCLASS. */
.*/*                                                                 */
.*/* PARAMETERS:                                                     */
.*/* SP=                                                             */
.*/*  An optional parameter. Specifies the private area subpool      */
.*/*  number of the storage. If you specify a register, the subpool  */
.*/*  number must be in bits 24-31 of the register, with bits 0-23   */
.*/*  set to zero. If you omit this parameter the default is subpool */
.*/*  zero.                                                          */
.*/*                                                                 */
.*/* LENGTH=                                                         */
.*/*  A required parameter. specifies the requested storage length.  */
.*/*  To code, specify the RS-type, or address in register (2)-(12). */
.*/*                                                                 */
.*/* JOB=                                                            */
.*/* STC=                                                            */
.*/* TSU=                                                            */
.*/* STOKEN=                                                         */
.*/*  A required parameter. Specifies the address of the 8-byte      */
.*/*  STOKEN or the address of the 8-byte JOB, STC or TSU jobname    */
.*/*  where to obtain the requested storage. To code, specify the    */
.*/*  RS-type address, or address in register (2)-(12).              */
.*/*                                                                 */
.*/* R15 - RETURN CODES:                                             */
.*/*  00 - Request completed successfully                            */
.*/*  08 - Request terminated abnormally                             */
.*/*                                                                 */
.*/* R0  - REASON CODES:                                             */
.*/*  00000000 - Successful completion                               */
.*/*  00000004 - Invalid STOKEN supplied                             */
.*/*  00000008 - ALESERV ADD failed                                  */
.*/*  00000012 - STORAGE OBTAIN with ALET failed                     */
.*/*  00000016 - Invalid STOKEN specified or JOB,STC,TSU not found.  */
.*/*  00000020 - ALESERV DELETE failed                               */
.*/*                                                                 */
.*/* --------------------------------------------------------------- */
.*/*                                                                 */
.*/* EXAMPLE 1:                                                      */
.*/*                                                                 */
.*/*  Obtain storage in the subpool specified by register 2, for     */
.*/*  the length specified by register 3, in the address space       */
.*/*  specified by the 8-byte STOKEN pointed to by register 4.       */
.*/*                                                                 */
.*/*   ZGETMEM SP=(2),LENGTH=(3),STOKEN=(4)                          */
.*/*                                                                 */
.*/* --------------------------------------------------------------- */
.*/*                                                                 */
.*/* EXAMPLE 2:                                                      */
.*/*                                                                 */
.*/*  Obtain storage in default subpool 0, for the length specified  */
.*/*  by register 2, in the batch address space specified by the     */
.*/*  8-character jobname pointed to by register 3.                  */
.*/*                                                                 */
.*/*   ZGETMEM LENGTH=(2),JOB=(3)                                    */
.*/*                                                                 */
.*/* --------------------------------------------------------------- */
.*/*                                                                 */
.*/* EXAMPLE 3:                                                      */
.*/*                                                                 */
.*/*  Obtain storage in subpool specified by word STGSPN, for the    */
.*/*  size specified in word STGSIZE, in address space specified     */
.*/*  by STOKEN in 8-byte ASTOKEN.                                   */
.*/*                                                                 */
.*/*   ZGETMEM LENGTH=STGSIZE,STOKEN=ASTOKEN,SP=STGSPN               */
.*/*                                                                 */
.*/*   ASTOKEN DS  XL8                                               */
.*/*   STGSIZE DC  AL4(512)                                          */
.*/*   STGSPN  DC  AL4(78)                                           */
.*/*                                                                 */
.*/* --------------------------------------------------------------- */
.*/*                                                                 */
.*/* Â© Copyright Ben Marino. 2021 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 12072021 | Ben Marino  | Initial version              *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     ZGETMEM &SP=,                 .subpool                        +
               &LENGTH=,               .length                         +
               &STOKEN=,               .space token                    +
               &JOB=,                  .JOBname                        +
               &STC=,                  .STCname                        +
               &TSU=                   .TSUname
.*
         COPY  ZZGBL
.*
.**      SP= parameter
.*
         AIF   ('&SP' NE '').GETM00
         LAE   0,0                     .SP=0 default
         AGO   .GETM10
.*
.GETM00  ANOP  ,
         AIF   ('&SP'(1,1) EQ '(').GETM05
         AIF   (T'&SP NE 'N').GETM02
         LAE   0,&SP                   .subpool
         AGO   .GETM10
.*
.GETM02  ANOP  ,
         L     0,&SP                   .subpool
         AGO   .GETM10
.*
.GETM05  ANOP  ,
         LR    0,&SP                   .subpool
.*
.**      LENGTH= parameter
.*
.GETM10  ANOP  ,
         AIF   ('&LENGTH' EQ '').ERR01
         AIF   ('&LENGTH'(1,1) EQ '(').GETM20
         AIF   (T'&LENGTH NE 'N').GETM15
         L     1,=AL4(&LENGTH)         .length
         AGO   .GETM25
.*
.GETM15  ANOP  ,
         L     1,&LENGTH               .length
         AGO   .GETM25
.*
.GETM20  ANOP  ,
         LR    1,&LENGTH               .length
.*
.**      STOKEN parameter
.*
.GETM25  ANOP  ,
         AIF   ('&STOKEN' EQ '').GETM35
         AIF   ('&JOB' NE '').ERR03
         AIF   ('&STC' NE '').ERR04
         AIF   ('&TSU' NE '').ERR05
         AIF   ('&STOKEN'(1,1) EQ '(').GETM30
         LAE   15,&STOKEN              .STOKEN address
         SAR   1,15                    .copy R15 to AR1
         LAM   15,15,=AL4(&TOKID)      .STOKEN supplied
         AGO   .GETM99
.*
.GETM30  ANOP  ,
         SAR   1,&STOKEN               .STOKEN address in AR1
         LAM   15,15,=AL4(&TOKID)      .STOKEN supplied
         AGO   .GETM99
.*
.**      {JOB|STC|TSU} parameter
.*
.GETM35  ANOP  ,
         AIF   ('&STOKEN' NE '').ERR03
         AIF   ('&JOB' EQ '').GETM45
         AIF   ('&STC' NE '').ERR06
         AIF   ('&TSU' NE '').ERR06
         AIF   ('&JOB'(1,1) EQ '(').GETM40
         LAE   15,&JOB                 .JOBname address
         SAR   1,15                    .copy R15 to AR1
         LAM   15,15,=AL4(&JOBID)      .JOBname supplied
         AGO   .GETM99
.*
.GETM40  ANOP  ,
         SAR   1,&JOB                  .JOBname address in AR1
         LAM   15,15,=AL4(&JOBID)      .JOBname supplied
         AGO   .GETM99
.*
.GETM45  ANOP  ,
         AIF   ('&STOKEN' NE '').ERR04
         AIF   ('&STC' EQ '').GETM55
         AIF   ('&JOB' NE '').ERR06
         AIF   ('&TSU' NE '').ERR06
         AIF   ('&STC'(1,1) EQ '(').GETM50
         LAE   15,&STC                 .STCname address
         SAR   1,15                    .copy R15 to AR1
         LAM   15,15,=AL4(&STCID)      .STCname supplied
         AGO   .GETM99
.*
.GETM50  ANOP  ,
         SAR   1,&STC                  .STCname address in AR1
         LAM   15,15,=AL4(&STCID)      .STCname supplied
         AGO   .GETM99
.*
.GETM55  ANOP  ,
         AIF   ('&STOKEN' NE '').ERR05
         AIF   ('&TSU' EQ '').ERR02
         AIF   ('&JOB' NE '').ERR06
         AIF   ('&STC' NE '').ERR06
         AIF   ('&TSU'(1,1) EQ '(').GETM60
         LAE   15,&TSU                 .TSUname address
         SAR   1,15                    .copy R15 to AR1
         LAM   15,15,=AL4(&TSUID)      .TSUname supplied
         AGO   .GETM99
.*
.GETM60  ANOP  ,
         SAR   1,&TSU                  .TSUname address in AR1
         LAM   15,15,=AL4(&TSUID)      .TSUname supplied
.*
.GETM99  ANOP  ,
         LAE   15,&GETMEM              .PCID
         ZZMAC GEN=XPC                 .XPCSRV PC router
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** ZGETMEM - Invalid LENGTH parameter specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** ZGETMEM - JOB, STC, TSU parameter not specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** ZGETMEM - JOB and STOKEN are mutually exclusive'
         MEXIT ,
.ERR04   MNOTE 8,'*** ZGETMEM - STC and STOKEN are mutually exclusive'
         MEXIT ,
.ERR05   MNOTE 8,'*** ZGETMEM - TSU and STOKEN are mutually exclusive'
         MEXIT ,
.ERR06   MNOTE 8,'*** ZGETMEM - JOB, STC, TSU are mutually exclusive'
         MEND
