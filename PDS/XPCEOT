XPCEOT   CSECT
*/********************************************************************/
*/*                                                                  */
*/* Name:        XPCEOT                                              */
*/*                                                                  */
*/* Function:    ZXPC Server end-of-task listener                    */
*/*                                                                  */
*/* Description: Receives control from exit SVC-3 when a task        */
*/*              normally or abnormally terminates.                  */
*/*                                                                  */
*/* Input Regs:  R0  SSCT address                                    */
*/*              R1  SSOB address                                    */
*/*              R13 save area address                               */
*/*              R14 return address                                  */
*/*              R15 entry point address                             */
*/*                                                                  */
*/* Regs Usage:  R6  SSET address                                    */
*/*              R7  SSCT address                                    */
*/*              R8  SSOB address                                    */
*/*              R9  ZRWA address                                    */
*/*              R10 base address                                    */
*/*              R11 ZXVT address                                    */
*/*              R12 DSA  address                                    */
*/*              R13 savearea address                                */
*/*                                                                  */
*/* Output Regs: R13 savearea address                                */
*/*              R14 return address                                  */
*/*                                                                  */
*/* Attributes:  TCB-mode                                            */
*/*              Primary mode                                        */
*/*              Key 0                                               */
*/*              Supervisor state                                    */
*/*              Page-fixed                                          */
*/*              Write-protected                                     */
*/*              Dynamic-LPA resident                                */
*/*                                                                  */
*/* Copyright:   Ben Marino. 2021 - 2022 (unpublished)               */
*/*                                                                  */
*/********************************************************************/
*---------------------------CHANGE LOG--------------------------------*
*                                                                     *
* ID    Rel    Date       Author        Comments                      *
*---------------------------------------------------------------------*
* @01 | V1R1 | 12072021 | Ben Marino  | Initial version               *
*     |      |          |             |                               *
***********************************************************************
*--------+---------+---------+---------+---------+---------+---------+*
XPCEOT   AMODE 31
XPCEOT   RMODE ANY
         COPY  ZZGBL
         USING XPCEOT,R15              Entry
         STM   R14,R12,GPR@R14(R13)    save caller's regs
         B     EOTMAIN                 branch
         ZZMAC GEN=MID,DSECT=NO        module ID
*
EOTMAIN  DS    0H
         DROP  R15
         LR    R10,R15                 base
         USING XPCEOT,R10              addressability
         LR    R7,R0                   SSCT
         USING SSCT,R7                 set addressability
         LR    R8,R1                   SSOB
         USING SSOB,R8                 set addressability
         L     R6,SSOBINDV             SSET
         USING SSOBEXT,R6              set addressability
         XR    R11,R11                 ZXVT not available
*
**       Obtain dynamic storage area
*
         SPKA  X'80'(0)                problem key
         STORAGE OBTAIN,LOC=ANY,CALLRKY=YES,                           +
               LENGTH=DSA@SIZE,SP=130,LINKAGE=SYSTEM
         SPKA  0(0)                    supervisor key
         LR    R12,R1
         USING DSA,R12                 set addressability
         LA    R3,DSA@SIZE             DSA size
         LR    R2,R1                   copy address
         XR    R15,R15                 zero
         MVCL  R2,R14                  scrub DSA
         ST    R13,GPR@BWD(,R1)        chain
         ST    R1,GPR@FWD(,R13)         save,
         LR    R13,R1                    areas.
*
**       Establish listener recovery
*
         LA    R9,DSAZRWA              ZRWA address
         USING ZRWA,R9                 set addressability
         MVC   ZRWAID,=CL4'ZRWA'       ID
         MVC   ZRWALMOD,MIDNAME        listener module
         MVC   ZRWASECT,MIDNAME        listener control section
         L     R3,XPCRTM               recovery routine
         BSM   R3,0                    set AMODE
         MVC   DSAESTAE(ESTAEL),ESTAE  listform
         ESTAE (3),                                                    +
               PARAM=(9),              DRWA address                    +
               TOKEN=DSATOKN,          store token here                +
               MF=(E,DSAESTAE)
         LTR   R15,R15                 successful?
         BNZ   EOTEXIT                 no, exit
         OI    DSAFLG1,DSA@STAE        recovery established
*
**       Activate listener recovery
*
         L     R11,SSCTSUSE            ZXVT
         USING ZXVT,R11                set addressability
         CLC   ZXVTID,=CL4'ZXVT'       valid indeed?
         BNE   EOTEXIT                 no, exit
         TM    ZXVTFLG1,ZXVT@ACT       server active?
         BZ    EOTEXIT                 no, exit
         ST    R11,ZRWAZXVT            init ZXVT address
         MVC   ZRWASUBN,ZXVTSUBN       init ZXPC server
         MVC   DSARSN,=AL4(RSN216)     set RSN
         ZZRETRY EOTEXIT,RSN=DSARSN    activate recovery
*
**       Test execution mode
*
         ZZTRC EOT=A,SWKEY=NO,MID=MIDNAME,MOD=XPCEOT
         TM    ZXVTFLG3,ZXVT@TST       MODE=TEST?
         BZ    EOT0000                 no
         ZZRUN MODE=TEST,EXIT=EOTEXIT  yes
*
**       Update listener entry count
*
EOT0000  DS    0H
         L     R2,ZXVTEOTC             listeners count
         LA    R3,1(,R2)               add one
         CS    R2,R3,ZXVTEOTC          update count
         BNE   EOT0000                 changed: try again
*
**       Call EOT event listeners
*
         LA    R5,EOTTABLE             listener table
         USING EOT,R5                  set addressability
         ZZTRC EOT=B,SWKEY=NO          trace
*
EOT0010  DS    0H
         CLC   EOTEPA,EOTTEND          end of table?
         BE    EOTEXIT                 yes, exit
         L     R15,EOTEPA              routine EPA
         BSM   R15,0                   set AMODE
         BASR  R14,R15                 call routine
         MVC   ZRWASECT,MIDNAME        ID mainline
         MVC   DSARSN,=AL4(RSN216)     set RSN
         ZZRETRY EOTEXIT,RSN=DSARSN    reset retry address
         ZZTRC EOT=C,SWKEY=NO          trace
         LA    R5,EOT@SIZE(,R5)        next EOT entry
         B     EOT0010                 loop
*---------------------------------------------------------------------*
*        Exit Routine                                                 *
*--------+---------+---------+---------+---------+---------+---------+*
EOTEXIT  DS    0H
         TM    DSAFLG1,DSA@STAE        recovery active?
         BZ    EOTXIT00                no
         ESTAE 0,TOKEN=DSATOKN         deactivate recovery
         ZZTRC EOT=D,SWKEY=NO          trace
*
EOTXIT00 DS    0H
         L     R13,GPR@BWD(,R13)       caller savearea
         SPKA  X'80'(0)                problem key
         STORAGE RELEASE,COND=NO,CALLRKY=YES,                          +
               ADDR=(12),LENGTH=DSA@SIZE,SP=130,LINKAGE=SYSTEM
         SPKA  0(0)                    supervisor key
         ZZTRC EOT=E,SWKEY=NO          trace
*
EOTXIT99 DS    0H
         LM    R14,R12,GPR@R14(R13)    restore caller's regs
         XR    R15,R15                 RC
         BR    R14                     return
*---------------------------------------------------------------------*
*        Constants                                                    *
*--------+---------+---------+---------+---------+---------+---------+*
         DS    0F
XPCRTM   DC    V(XPCRTM)               XPCRTM
ESTAE    ESTAE 0,MF=L                  listform
ESTAEL   EQU   *-ESTAE
*---------------------------------------------------------------------*
*        EOT listener routine table                                   *
*--------+---------+---------+---------+---------+---------+---------+*
EOTTABLE DS    0F
         ZZTAB GEN=EOT,TYPE=INITIAL
*
         ZZTAB GEN=EOT,                                                +
               TYPE=ENTRY,                                             +
               EP=DELZXRE              ZXRE disable routine
*
         ZZTAB GEN=EOT,                                                +
               TYPE=ENTRY,                                             +
               EP=ENFZXRE              ENF ZXRE disable routine
*
         ZZTAB GEN=EOT,TYPE=FINAL
*
EOT@TSZE EQU   *-EOTTABLE
         DS    0F
EOTTEND  DC    AL4(-1)                 end-of-table marker
*---------------------------------------------------------------------*
*        Literals                                                     *
*--------+---------+---------+---------+---------+---------+---------+*
         LTORG ,
         DROP  ,
*/********************************************************************/
*/*                                                                  */
*/* Name:        SOMZXRE                                             */
*/*                                                                  */
*/* Function:    PERSIST=EOT ZXRE entries disable routine            */
*/*                                                                  */
*/* Input Regs:  R6  SSET address                                    */
*/*              R7  SSCT address                                    */
*/*              R8  SSOB address                                    */
*/*              R9  ZRWA address                                    */
*/*              R11 ZXVT address                                    */
*/*              R12 DSA address                                     */
*/*              R13 Savearea address                                */
*/*              R14 Return address                                  */
*/*              R15 Entry address                                   */
*/*                                                                  */
*/* Regs Usage:  R4  ZXSA address                                    */
*/*              R6  SSET address                                    */
*/*              R7  SSCT address                                    */
*/*              R8  SSOB address                                    */
*/*              R9  ZRWA address                                    */
*/*              R10 base address                                    */
*/*              R11 ZXVT address                                    */
*/*              R12 DSA  address                                    */
*/*              R13 savearea address                                */
*/*                                                                  */
*/* Output Regs: R15 Return code                                     */
*/*              R0  Reason code                                     */
*/*                                                                  */
*/********************************************************************/
*/-------+---------+---------+---------+---------+---------+---------*/
DELZXRE  DS    0H
         USING ZRWA,R9
         USING ZXVT,R11
         USING DSA,R12
         USING SSOBEXT,R6
         B     12(,R15)
DELZID   DC    CL8'DELZXRE'            ID
         STM   R14,R12,GPR@R14(R13)    save regs
         LR    R10,R15                 base address
         USING DELZXRE,R10             base addressability
         LA    R1,DSASBSA              subroutine savearea
         ST    R13,GPR@BWD(,R1)        chain,
         ST    R1,GPR@FWD(,R13)        save,
         LR    R13,R1                  areas.
         MVC   ZRWASECT,DELZID         ID
         LA    R4,DSAZXSA              ZXSA
         USING ZXSA,R4                 set addressability
         XC    ZXSA(XSA@SIZE),ZXSA
         MVC   XSAID,=CL4'ZXSA'
*
**       Activate recovery
*
         MVC   DSARSN,=AL4(RSN232)     set RSN
         ZZRETRY DELZXIT,RSN=DSARSN    set retry address
         ZZTRC EOT=F,SWKEY=NO,MID=DELZID,MOD=XPCEOT
*
**       Disable SOM ZXRE queue entries
*
         XR    R5,R5
         L     R3,ZXVTSOMQ             ZXRE queue
         CS    R5,R3,ZXVTSOMQ          listeners queued?
         BZ    DELZ000                 no
         ST    R5,XSAPARM              SOM queue address
         MVC   XSATCB,SSETCBA          TCB address
         MVC   XSAASCB,SSETASCB        ASCB address
         ZZCALL ZXSA,EP=EOTZXRE        disable PERSIST=EOT entries
         ZZTRC EOT=G,SWKEY=NO          trace
*
**       Disable EOM ZXRE queue entries
*
DELZ000  DS    0H
         XR    R5,R5
         L     R3,ZXVTEOMQ             ZXRE queue
         CS    R5,R3,ZXVTEOMQ          listeners queued?
         BZ    DELZ010                 no
         ST    R5,XSAPARM              EOM queue address
         MVC   XSATCB,SSETCBA          TCB address
         MVC   XSAASCB,SSETASCB        ASCB address
         ZZCALL ZXSA,EP=EOTZXRE        disable PERSIST=EOT entries
         ZZTRC EOT=H,SWKEY=NO          trace
*
**       Disable CMD ZXRE queue entries
*
DELZ010  DS    0H
         XR    R5,R5
         L     R3,ZXVTCMDQ             ZXRE queue
         CS    R5,R3,ZXVTCMDQ          listeners queued?
         BZ    DELZ020                 no
         ST    R5,XSAPARM              CMD queue address
         MVC   XSATCB,SSETCBA          TCB address
         MVC   XSAASCB,SSETASCB        ASCB address
         ZZCALL ZXSA,EP=EOTZXRE        disable PERSIST=EOT entries
         ZZTRC EOT=I,SWKEY=NO          trace
*
**       Disable WTO ZXRE queue entries
*
DELZ020  DS    0H
         XR    R5,R5
         L     R3,ZXVTWTOQ             ZXRE queue
         CS    R5,R3,ZXVTWTOQ          listeners queued?
         BZ    DELZ030                 no
         ST    R5,XSAPARM              WTO queue address
         MVC   XSATCB,SSETCBA          TCB address
         MVC   XSAASCB,SSETASCB        ASCB address
         ZZCALL ZXSA,EP=EOTZXRE        disable PERSIST=EOT entries
         ZZTRC EOT=J,SWKEY=NO          trace
*
**       Disable Db2 ZXRE queue entries
*
DELZ030  DS    0H
         XR    R5,R5
         L     R3,ZXVTDB2Q             ZXRE queue
         CS    R5,R3,ZXVTDB2Q          listeners queued?
         BZ    DELZ040                 no
         ST    R5,XSAPARM              Db2 queue address
         MVC   XSATCB,SSETCBA          TCB address
         MVC   XSAASCB,SSETASCB        ASCB address
         ZZCALL ZXSA,EP=EOTZXRE        disable PERSIST=EOT entries
         ZZTRC EOT=K,SWKEY=NO          trace
*
**       Disable XCF ZXRE queue entries
*
DELZ040  DS    0H
         XR    R5,R5
         L     R3,ZXVTXCFQ             ZXRE queue
         CS    R5,R3,ZXVTXCFQ          listeners queued?
         BZ    DELZXIT                 no
         ST    R5,XSAPARM              XCF queue address
         MVC   XSATCB,SSETCBA          TCB address
         MVC   XSAASCB,SSETASCB        ASCB address
         ZZCALL ZXSA,EP=EOTZXRE        disable PERSIST=EOT entries
         ZZTRC EOT=L,SWKEY=NO          trace
*
DELZXIT  DS    0H
         L     R13,GPR@BWD(,R13)       mainline savearea
         LM    R15,R1,DSAOPAR          output regs
         LM    R2,R12,GPR@R2(R13)      restore regs
         L     R14,GPR@R14(,R13)       return address
         BR    R14                     return
*---------------------------------------------------------------------*
*        Constants/Literals                                           *
*--------+---------+---------+---------+---------+---------+---------+*
         LTORG ,
         DROP  ,
*/********************************************************************/
*/*                                                                  */
*/* Name:        ENFZXRE                                             */
*/*                                                                  */
*/* Function:    PERSIST=EOT ZXRE disable routine                    */
*/*                                                                  */
*/* Input Regs:  R6  SSET address                                    */
*/*              R7  SSCT address                                    */
*/*              R8  SSOB address                                    */
*/*              R9  ZRWA address                                    */
*/*              R11 ZXVT address                                    */
*/*              R12 DSA address                                     */
*/*              R13 Savearea address                                */
*/*              R14 Return address                                  */
*/*              R15 Entry address                                   */
*/*                                                                  */
*/* Regs Usage:  R4  ZXSA address                                    */
*/*              R5  ZXRE address                                    */
*/*              R6  SSET address                                    */
*/*              R7  SSCT address                                    */
*/*              R8  SSOB address                                    */
*/*              R9  ZRWA address                                    */
*/*              R10 base address                                    */
*/*              R11 ZXVT address                                    */
*/*              R12 DSA  address                                    */
*/*              R13 savearea address                                */
*/*                                                                  */
*/* Output Regs: R15 Return code                                     */
*/*              R0  Reason code                                     */
*/*                                                                  */
*/********************************************************************/
*/-------+---------+---------+---------+---------+---------+---------*/
ENFZXRE  DS    0H
         USING ZRWA,R9
         USING ZXVT,R11
         USING DSA,R12
         USING SSOBEXT,R6
         B     12(,R15)
ENFZID   DC    CL8'ENFZXRE'            ID
         STM   R14,R12,GPR@R14(R13)    save regs
         LR    R10,R15                 base address
         USING ENFZXRE,R10             base addressability
         LA    R1,DSASBSA              subroutine savearea
         ST    R13,GPR@BWD(,R1)        chain,
         ST    R1,GPR@FWD(,R13)        save,
         LR    R13,R1                  areas.
         MVC   ZRWASECT,ENFZID         ID
         LA    R4,DSAZXSA              ZXSA
         USING ZXSA,R4
*
**       Activate recovery
*
         MVC   DSARSN,=AL4(RSN236)     set RSN
         ZZRETRY ENFZXIT,RSN=DSARSN    set retry address
         ZZTRC EOT=1,SWKEY=NO,MID=ENFZID,MOD=XPCEOT
*
**       Locate listener ZXRE entry
*
         XR    R5,R5
         L     R3,ZXVTENFQ             ZXRE queue
         CS    R5,R3,ZXVTENFQ          listeners queued?
         BZ    ENFZXIT                 no, exit
         USING ZXRE,R5                 set addressability
         ZZTRC EOT=N,SWKEY=NO          trace
         B     ENFZ010                 scan queue
*
ENFZ000  DS    0H
         ICM   R5,15,XRECHPTR          last entry?
         BZ    ENFZXIT                 yes, exit
         ZZTRC EOT=O,SWKEY=NO          trace
*
ENFZ010  DS    0H
         CLC   XREID,=CL4'ZXRE'        valid entry?
         BE    ENFZ020                 yes
         ZZTRC EOT=P,SWKEY=NO          trace
         B     ENFZXIT                 exit
*
ENFZ020  DS    0H
         TM    XREOPTS2,XRE@ZPT        PERSIST=EOT?
         BZ    ENFZ000                 no, next entry
         L     R3,SSETASCB             ASCB
         USING ASCB,R3                 set addressability
         L     R3,ASCBASSB             ASSB
         USING ASSB,R3                 set addressability
         CLC   XRESTOKN,ASSBSTKN       same instance?
         BNE   ENFZ000                 no, next entry
         CLC   XRETCB,SSETCBA          same instance?
         BNE   ENFZ000                 no, next entry
         ZZTRC EOT=Q,SWKEY=NO          trace
         DROP  R3
*
**       Issue ENFREQ ACTION=DELETE call
*
         TM    XREFLAG1,XRE@OWNR       request owner?
         BZ    ENFZ030                 no, skip ENF delete
         TM    XREFLAG1,XRE@ENFD       delete required?
         BZ    ENFZ030                 no, skip ENF delete
         XC    ZXSA(XSA@SIZE),ZXSA
         MVC   XSAID,=CL4'ZXSA'
         MVC   XSAPARM,XRESIGNL        init signal code
         ST    R5,XSAZXRE              init owner ZXRE
         ZZCALL ZXSA,EP=ENFCHLD        locate child ZXRE
         ST    R15,DSARC               save RC
         LTR   R15,R15                 any children?
         BNZ   ENFZ030                 yes, skip ENF delete
         L     R2,XRESIGNL             event code
         L     R3,XRETKENF             delete token
         MVC   DSAPLST(ZENFREQL),ZENFREQ
         ENFREQ ACTION=DELETE,CODE=(2),DTOKEN=(3),                     +
               MF=(E,DSAPLST)
         NIL   XREFLAG1,XFF-XRE@ENFD,REF=XREFLAGS
         ZZTRC EOT=R,SWKEY=NO          trace
*
**       Disable listener ZXRE entry
*
ENFZ030  DS    0H
         OIL   XREFLAG1,XRE@OFFQ,REF=XREFLAGS
         OIL   XREFLAG2,XRE@DELT,REF=XREFLAGS
         STCK  XREESTCK                disable clock value
         XC    DSARC,DSARC             set RC
         ZZTRC EOT=S,SWKEY=NO          trace
         B     ENFZ000                 next entry
*
ENFZXIT  DS    0H
         L     R13,GPR@BWD(,R13)       mainline savearea
         LM    R15,R1,DSAOPAR          output regs
         LM    R2,R12,GPR@R2(R13)      restore regs
         L     R14,GPR@R14(,R13)       return address
         BR    R14                     return
*---------------------------------------------------------------------*
*        Constants/Literals                                           *
*--------+---------+---------+---------+---------+---------+---------+*
         DS    0F
ZENFREQ  ENFREQ ACTION=DELETE,CODE=*-*,MF=L
ZENFREQL EQU   *-ZENFREQ
         LTORG ,
         DROP  ,
*---------------------------------------------------------------------*
*        Dynamic Storage Area                                         *
*--------+---------+---------+---------+---------+---------+---------+*
DSA      DSECT ,
DSASAVE  DS    18F                     savearea
DSASBSA  DS    18F                     subroutine savearea
DSAENFS  DS    18F                     ENF subroutine savearea
         DS    0X
DSAFLG1  DS    XL1                     flags
DSA@STAE EQU   X'80'                   recovery indicator
DSA@RV1  EQU   X'40'                   -available
DSA@RV2  EQU   X'20'                   -available
DSA@RV3  EQU   X'10'                   -available
DSA@RV4  EQU   X'08'                   -available
DSA@RV5  EQU   X'04'                   -available
DSA@RV6  EQU   X'02'                   -available
DSA@RV7  EQU   X'01'                   -available
         DS    0X
DSAFLGX  DS    XL3                     -available
         DS    0F
DSAOPAR  DS    0F                      output parms
DSARC    DS    F                       -R15 = RC
DSARSN   DS    F                       -R0  = RSN
DSAGR1   DS    F                       -R1  = output parm
DSA@OPAL EQU   *-DSAOPAR               keep it in order
         DS    0F
DSACKEY  DS    F                       caller key
DSATOKN  DS    F                       ESTAE token
ENFPTR   DS    F                       needed by ENFREQ macro
DSATTOKN DS    XL16                    TTOKEN
         DS    0F
DSAESTAE DS    CL(ESTAEL)              ESTAE listform
         DS    0F
DSAZRWA  DS    CL(ZRWA@SZE)            ZRWA recovery workarea
         DS    0F
DSAZXSA  DS    CL(XSA@SIZE)            XSA listform
         DS    0F
DSAPLST  DS    XL256                   parmlist
         DS    0D
DSA@SIZE EQU   *-DSA                   size of DSA
*---------------------------------------------------------------------*
*        Server Data Areas                                            *
*--------+---------+---------+---------+---------+---------+---------+*
         PRINT NOGEN
         ZZXVT ,
         ZZXRE ,
         ZZASY ,
         ZZXSA ,
         ZZRWA ,
         ZZEQU ,
         ZZTAB GEN=EOT,DSECT=YES
         ZZMAC GEN=MID,ID=XID,DSECT=YES
*---------------------------------------------------------------------*
*        System data areas                                            *
*--------+---------+---------+---------+---------+---------+---------+*
         PRINT NOGEN
         IHAPSA ,
         IHAASCB ,
         IHAASXB ,
         IHAASSB ,
         IEFENFCT ,
         IEFENFPM ,
         IKJTCB DSECT=YES
         CVT   DSECT=YES
         IEFJESCT ,
         IEFJSCVT ,
         IEFJSSIB ,
         IEFJSSOB (ET),CONTIG=NO
TIOT     DSECT ,
         IEFTIOT1 ,
         IEFENFSG ,
ENSG@SZE EQU *-ENSG
         END
