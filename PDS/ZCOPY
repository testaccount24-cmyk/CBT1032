.*/*******************************************************************/
.*/*                                                                 */
.*/* NAME:                                                           */
.*/*  ZCOPY                                                          */
.*/*                                                                 */
.*/* FUNCTION:                                                       */
.*/*  Copy data to target address space.                             */
.*/*                                                                 */
.*/* DESCRIPTION:                                                    */
.*/*  Set access register mode and copy data to target address       */
.*/*  space identified by the target STOKEN.                         */
.*/*                                                                 */
.*/* ENVIRONMENT:                                                    */
.*/*  TCB or SRB mode.                                               */
.*/*  Enabled for I/O and External interrupts.                       */
.*/*  The caller must not be locked.                                 */
.*/*                                                                 */
.*/* SECURITY:                                                       */
.*/*  When SAF=NOCALL is specified, security checks are bypassed.    */
.*/*  When SAF=XPCCLASS is specified, the caller must have READ      */
.*/*  authority to profile ZXPC.API.AUTH in resource class XPCCLASS. */
.*/*                                                                 */
.*/* TO=                                                             */
.*/*  A required parameter. Specifies the target storage address.    */
.*/*  To code, specify the RS-type, or address in register (2)-(12). */
.*/*                                                                 */
.*/* LENGTH=                                                         */
.*/*  A required parameter. Specifies the storage length.            */
.*/*  To code, pecify the RS-type, or address in register (2)-(12).  */
.*/*                                                                 */
.*/* FROM=                                                           */
.*/*  A required parameter. Specifies the source storage address.    */
.*/*  To code, specify the RS-type, or address in register (2)-(12). */
.*/*                                                                 */
.*/* JOB=                                                            */
.*/* STC=                                                            */
.*/* TSU=                                                            */
.*/* STOKEN=                                                         */
.*/*  A required parameter. Specifies the address of the 8-byte      */
.*/*  STOKEN or the address of the 8-byte JOB, STC or TSU jobname    */
.*/*  of the target address space. To code, specify the RS-type      */
.*/*  address, or address in register (2)-(12).                      */
.*/*                                                                 */
.*/* R15 - RETURN CODES:                                             */
.*/*  00 - Request completed successfully                            */
.*/*  08 - Request terminated abnormally                             */
.*/*                                                                 */
.*/* R0  - REASON CODES:                                             */
.*/*  00000000 - Successful completion                               */
.*/*  00000004 - Invalid STOKEN supplied                             */
.*/*  00000008 - Invalid storage subpool specified                   */
.*/*                                                                 */
.*/* --------------------------------------------------------------- */
.*/*                                                                 */
.*/* EXAMPLE 1:                                                      */
.*/*                                                                 */
.*/*  Copy storage data from source location pointed to by register  */
.*/*  4, to target storage location pointed to by register 2, for    */
.*/*  the length contained in register 3, using target 8-byte STOKEN */
.*/*  pointed to by register 5.                                      */
.*/*                                                                 */
.*/*   ZCOPY TO=(2),LENGTH=(3),FROM=(4),STOKEN=(5)                   */
.*/*                                                                 */
.*/* --------------------------------------------------------------- */
.*/*                                                                 */
.*/* EXAMPLE 2:                                                      */
.*/*                                                                 */
.*/*  Copy storage data from source location pointed to by register  */
.*/*  4, to target storage location pointed to by register 2, for    */
.*/*  the length contained in register 3, using the 8-character      */
.*/*  started task name pointed to by register 5.                    */
.*/*                                                                 */
.*/*   ZCOPY TO=(2),LENGTH=(3),FROM=(4),STC=(5)                      */
.*/*                                                                 */
.*/* --------------------------------------------------------------- */
.*/*                                                                 */
.*/* Â© Copyright Ben Marino. 2021 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 12072021 | Ben Marino  | Initial version              *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     ZCOPY &TO=,                   .target address                 +
               &LENGTH=,               .target length                  +
               &FROM=,                 .source address                 +
               &STOKEN=,               .space token                    +
               &JOB=,                  .JOBname                        +
               &STC=,                  .STCname                        +
               &TSU=,                  .TSUname                        +
               &PCREG=14
.*
         COPY  ZZGBL
.*
.**      TO= parameter
.*
         AIF   ('&TO' EQ '').ERR00
         AIF   ('&TO'(1,1) EQ '(').COPY00
         L     1,&TO                   .target location
         AGO   .COPY05
.*
.COPY00  ANOP  ,
         LR    1,&TO                   .target location
.*
.**      LENGTH parameter
.*
.COPY05  ANOP  ,
         AIF   ('&LENGTH' EQ '').ERR01
         AIF   ('&LENGTH'(1,1) EQ '(').COPY15
         AIF   (T'&LENGTH NE 'N').COPY10
         L     0,=AL4(&LENGTH)         .storage length
         AGO   .COPY20
.*
.COPY10  ANOP  ,
         L     0,&LENGTH               .storage length
         AGO   .COPY20
.*
.COPY15  ANOP  ,
         LR    0,&LENGTH               .storage length
.*
.**      FROM  parameter
.*
.COPY20  ANOP  ,
         AIF   ('&FROM' EQ '').ERR07
         AIF   ('&FROM'(1,1) EQ '(').COPY22
         LAE   15,&FROM                .source address
         SAR   0,15                    .source address in AR0
         AGO   .COPY25
.*
.COPY22  ANOP  ,
         SAR   0,&FROM                 .source address in AR0
.*
.**      STOKEN parameter
.*
.COPY25  ANOP  ,
         AIF   ('&STOKEN' EQ '').COPY35
         AIF   ('&JOB' NE '').ERR03
         AIF   ('&STC' NE '').ERR04
         AIF   ('&TSU' NE '').ERR05
         AIF   ('&STOKEN'(1,1) EQ '(').COPY30
         LAE   15,&STOKEN              .STOKEN address
         SAR   1,15                    .copy R15 to AR1
         LAM   15,15,=AL4(&TOKID)      .STOKEN supplied
         AGO   .COPY99
.*
.COPY30  ANOP  ,
         SAR   1,&STOKEN               .STOKEN address in AR1
         LAM   15,15,=AL4(&TOKID)      .STOKEN supplied
         AGO   .COPY99
.*
.**      {JOB|STC|TSU} parameter
.*
.COPY35  ANOP  ,
         AIF   ('&STOKEN' NE '').ERR03
         AIF   ('&JOB' EQ '').COPY45
         AIF   ('&STC' NE '').ERR06
         AIF   ('&TSU' NE '').ERR06
         AIF   ('&JOB'(1,1) EQ '(').COPY40
         LAE   15,&JOB                 .JOBname address
         SAR   1,15                    .copy R15 to AR1
         LAM   15,15,=AL4(&JOBID)      .JOBname supplied
         AGO   .COPY99
.*
.COPY40  ANOP  ,
         SAR   1,&JOB                  .JOBname address in AR1
         LAM   15,15,=AL4(&JOBID)      .JOBname supplied
         AGO   .COPY99
.*
.COPY45  ANOP  ,
         AIF   ('&STOKEN' NE '').ERR04
         AIF   ('&STC' EQ '').COPY55
         AIF   ('&JOB' NE '').ERR06
         AIF   ('&TSU' NE '').ERR06
         AIF   ('&STC'(1,1) EQ '(').COPY50
         LAE   15,&STC                 .STCname address
         SAR   1,15                    .copy R15 to AR1
         LAM   15,15,=AL4(&STCID)      .STCname supplied
         AGO   .COPY99
.*
.COPY50  ANOP  ,
         SAR   1,&STC                  .STCname address in AR1
         LAM   15,15,=AL4(&STCID)      .STCname supplied
         AGO   .COPY99
.*
.COPY55  ANOP  ,
         AIF   ('&STOKEN' NE '').ERR05
         AIF   ('&TSU' EQ '').ERR02
         AIF   ('&JOB' NE '').ERR06
         AIF   ('&STC' NE '').ERR06
         AIF   ('&TSU'(1,1) EQ '(').COPY60
         LAE   15,&TSU                 .TSUname address
         SAR   1,15                    .copy R15 to AR1
         LAM   15,15,=AL4(&TSUID)      .TSUname supplied
         AGO   .COPY99
.*
.COPY60  ANOP  ,
         SAR   1,&TSU                  .TSUname address in AR1
         LAM   15,15,=AL4(&TSUID)      .TSUname supplied
.*
.COPY99  ANOP  ,
         LAE   15,&COPY                .PCID
         ZZMAC GEN=XPC                 .XPCSRV PC router
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR00   MNOTE 8,'*** ZCOPY - Invalid TO parameter specified'
         MEXIT ,
.ERR01   MNOTE 8,'*** ZCOPY - Invalid LENGTH parameter specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** ZCOPY - JOB, STC, TSU parameter not specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** ZCOPY - JOB and STOKEN are mutually exclusive'
         MEXIT ,
.ERR04   MNOTE 8,'*** ZCOPY - STC and STOKEN are mutually exclusive'
         MEXIT ,
.ERR05   MNOTE 8,'*** ZCOPY - TSU and STOKEN are mutually exclusive'
         MEXIT ,
.ERR06   MNOTE 8,'*** ZCOPY - JOB, STC, TSU are mutually exclusive'
         MEXIT ,
.ERR07   MNOTE 8,'*** ZCOPY - Invalid FROM parameter specified'
         MEND
